/** * @file BinaryToDecimal.java * @author: Md. Yousuf Ali (yousuf.cse17@gmail.com) * @brief Binary to decimal, left shift operation still best one * @version: 0.1 * @date 2023-07-12 * @since WednesDay; 11:03 PM * @copyright Copyright (c) 2023 * @institute: Dept. of CSE, Varendra University, Rajshahi, Bangladesh */package ConsolePros;public class BinaryToDecimal {    public static long binaryToDecimal1(String binaryString){ /*This method more efficient*/        final int len = binaryString.length();        long base = 1; /*(long)Math.pow(2, 0) -> 1*/        long decimalNumber = 0;        for(int i = len - 1; i >= 0; i--){            if(binaryString.charAt(i) == '1'){                decimalNumber += base;            }            base <<= 1; /*base *= 2*/ /*1 + 2 + 4 + 8 + 16 + 32*/        }        return decimalNumber;    }    /*binaryToDecimal1() method overloading example*/    public static long binaryToDecimal1(long binaryNumber){        return binaryToDecimal1(Long.toString(binaryNumber));    }    public static long binaryToDecimal2(String binaryString){        long binaryNumber = Long.parseLong(binaryString);        long decimal = 0;        long base = 0;        while(binaryNumber != 0){            long lastDigit = binaryNumber % 10;            decimal += lastDigit << base; /*base *= 2*/            base++;            binaryNumber /= 10;        }        return decimal;    }    public static void main(String[] args) {        String binarySting = "000100";        System.out.println(binaryToDecimal1(binarySting));        System.out.println(binaryToDecimal2(binarySting));        System.out.println(binaryToDecimal1(Long.parseLong(binarySting)));    }}